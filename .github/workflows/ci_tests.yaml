name: Python package

on: [push]

jobs:

  pytest_tests:
    runs-on: linux.12xlarge
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
    container:
      image: python:${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov pytest-xdist numpy
          if [ -f requirements.txt ]; then pip install -r requirements.txt --find-links https://download.pytorch.org/whl/nightly/cpu/torch_nightly.html; fi
      - name: Install pavel's huggingface fork
        run: pip install git+https://github.com/pbelevich/transformers.git@compatible_with_pt_master sentencepiece
      - name: Install pippy
        run: "python setup.py install"
      - name: Test with pytest
        run: |
          pytest --cov=pippy --ignore=test/hf_test.py test/

  hf_model_tests:
    runs-on: linux.12xlarge
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
    container:
      image: python:${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov pytest-xdist numpy
          if [ -f requirements.txt ]; then pip install -r requirements.txt --find-links https://download.pytorch.org/whl/nightly/cpu/torch_nightly.html; fi
      - name: Install pavel's huggingface fork
        run: pip install git+https://github.com/pbelevich/transformers.git@compatible_with_pt_master sentencepiece
      - name: Install pippy
        run: "python setup.py install"
      # Single thread to avoid OOM
      - name: Test with pytest
        run: |
          pytest -sv --cov=pippy test/hf_test.py

  min_gpt_test:
    runs-on: linux.2xlarge
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
    container:
      image: python:${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov numpy
          if [ -f requirements.txt ]; then pip install -r requirements.txt --find-links https://download.pytorch.org/whl/nightly/cpu/torch_nightly.html; fi
      - name: Install pippy
        run: "python setup.py install"
      - name: Initialize minGPT submodule
        run: git submodule update --init test/minGPT
      - name: Test min-gpt-tracing
        run: python test/min_gpt_tracing.py

  integration_test:
    runs-on: linux.2xlarge
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
    container:
      image: python:${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov numpy
          if [ -f requirements.txt ]; then pip install -r requirements.txt --find-links https://download.pytorch.org/whl/nightly/cpu/torch_nightly.html; fi
      - name: Install pavel's huggingface fork
        run: pip install git+https://github.com/pbelevich/transformers.git@compatible_with_pt_master sentencepiece
      - name: Install pippy
        run: "python setup.py install"
      - name: Run forward-only integration test - Transmitted parameters - Fill Drain
        run: REPLICATE=0 test/launch_local_test_forward.sh -s FillDrain
      - name: Run forward-only integration test - Transmitted parameters - 1F1B
        run: REPLICATE=0 test/launch_local_test_forward.sh -s 1F1B
      - name: Run forward-only integration test - Replicated parameters - Fill Drain
        run: REPLICATE=1 test/launch_local_test_forward.sh -s FillDrain
      - name: Run forward-only integration test - Replicated parameters - 1F1B
        run: REPLICATE=1 test/launch_local_test_forward.sh -s 1F1B
      - name: Run forward-loss-backward integration test - Transmitted parameters - Fill Drain
        run: REPLICATE=0 test/launch_local_test_forward_backward.sh -s FillDrain
      - name: Run forward-loss-backward integration test - Transmitted parameters - 1F1B
        run: REPLICATE=0 test/launch_local_test_forward_backward.sh -s 1F1B
      - name: Run forward-loss-backward integration test - Replicated parameters - Fill Drain
        run: REPLICATE=1 test/launch_local_test_forward_backward.sh -s FillDrain
      - name: Run forward-loss-backward integration test - Replicated parameters - 1F1B
        run: REPLICATE=1 test/launch_local_test_forward_backward.sh -s 1F1B
      - name: Run HF BERT forward-only integration test - Transmitted parameters
        run: REPLICATE=0 test/launch_local_test_forward_hf_bert.sh
      - name: Run HF BERT forward-only integration test - Replicated parameters
        run: REPLICATE=1 test/launch_local_test_forward_hf_bert.sh
      - name: Run HF GPT2 forward-only integration test - Transmitted parameters
        run: REPLICATE=0 test/launch_local_test_forward_hf_gpt2.sh
      - name: Run HF GPT2 forward-only integration test - Replicated parameters
        run: REPLICATE=1 test/launch_local_test_forward_hf_gpt2.sh

      - name: Run visualizer test - Transmitted parameters - Fill Drain
        run: REPLICATE=0 python test/local_test_visualizer.py -s FillDrain
      - name: Run visualizer test - Replicated parameters - Fill Drain
        run: REPLICATE=1 python test/local_test_visualizer.py -s FillDrain
      - name: Run visualizer test - Transmitted parameters - 1F1B
        run: REPLICATE=0 python test/local_test_visualizer.py -s 1F1B
      - name: Run visualizer test - Replicated parameters - 1F1B
        run: REPLICATE=1 python test/local_test_visualizer.py -s 1F1B
